/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.udb.forms;

import com.sv.udb.clases.Fondo;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author bernardo
 */
public class frmReloj extends javax.swing.JFrame {

    /**
     * Creates new form frmReloj
     */
    java.util.Calendar calendario;
    int dia, mes, a単o, hora, minutos, segundos;
    Timer timer;
    public frmReloj() {
        initComponents();
        this.setLocationRelativeTo(null);
        calendario = new java.util.GregorianCalendar();
        this.generar(220, 32, pnlFondo, "R");
        inicial();
        Fondo img1 = new Fondo("com/sv/udb/images/reloj.jpg", 434, 425);
        pnlFondo.add(img1);
        pnlFondo.repaint();
        timer = new javax.swing.Timer(1000, new java.awt.event.ActionListener() {
            @ Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                java.util.Date actual = new java.util.Date();
                calendario.setTime(actual);
                dia = calendario.get(Calendar.DAY_OF_MONTH);
                mes = (calendario.get(Calendar.MONTH) + 1);
                a単o = calendario.get(Calendar.YEAR);
                hora = calendario.get(Calendar.HOUR_OF_DAY);
                minutos = calendario.get(Calendar.MINUTE);
                segundos = calendario.get(Calendar.SECOND);
                String hour = String.format("%02d:%02d:%02d", hora, minutos, segundos);
                String date = String.format("%02d/%02d/%02d", dia, mes, a単o);
                lblHora.setText("<html><center>" + hour);
                lblFecha.setText("<html><center>" + date);
                if (segundos==0){
                        for (int i = 0; i < 60; i++)
                        {
                            ((JTextField)pnlFondo.getComponent(i)).setBackground(Color.white);
                        }
                }
                if(pnlFondo.getComponent(segundos) instanceof JTextField) {
                    ((JTextField)pnlFondo.getComponent(segundos)).setBackground(Color.green); 
                }
            }
        });
        timer.start();          
        
    }
    
    private void inicial() {
        java.util.Date actual = new java.util.Date();
        calendario.setTime(actual);
        dia = calendario.get(Calendar.DAY_OF_MONTH);
        mes = (calendario.get(Calendar.MONTH) + 1);
        a単o = calendario.get(Calendar.YEAR);
        hora = calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND);
        for (int i = 0; i < segundos+1; i++)
        {
            ((JTextField)pnlFondo.getComponent(i)).setBackground(Color.green);
        }
    }
    
    private void generar(int x, int y, JPanel panel, String pref) {
        
        JTextField[] campos;
        campos = new JTextField[60];
        for (int i = 0; i < 60; i++)
        {
            campos[i] = new JTextField();
            campos[i].setFocusable(false);
            campos[i].setSize(20, 20);
            campos[i].setName(pref+i);
            campos[i].setFocusable(false);
        }
        int espacio = 20;
        campos[0].setLocation(x, y);
        for (int i = 1;i < 7; i++)
        {
            campos[i].setLocation(x+(espacio*i), y);
        }
        for (int i = 1;i < 16; i++)
        {
            campos[i+6].setLocation(x+(espacio*7), y+(espacio*i));
        }
        for (int i = 1;i < 16; i++)
        {
            campos[i+21].setLocation((x+(espacio*7))-(espacio*i), y+(espacio*16));
        }
        for (int i = 1;i < 16; i++)
        {
            campos[i+36].setLocation((x-(espacio*9)), (y+(espacio*16)) - (espacio*i));
        }
        for (int i = 1;i < 9; i++)
        {
            campos[i+51].setLocation((x-(espacio*9)+(espacio*i)), y);
        }
        
        for (int i = 0; i < 60; i++)
        {
            //btgRadios.add(campos[i]);
            panel.add(campos[i], i);
        }
        panel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgRadios = new javax.swing.ButtonGroup();
        pnlFondo = new javax.swing.JPanel();
        lblHora = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlFondo.setBackground(new java.awt.Color(255, 51, 51));

        lblHora.setBackground(new java.awt.Color(255, 153, 255));
        lblHora.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        lblHora.setForeground(new java.awt.Color(255, 255, 255));
        lblHora.setText("jLabel1");

        lblFecha.setBackground(new java.awt.Color(255, 153, 255));
        lblFecha.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("jLabel1");

        javax.swing.GroupLayout pnlFondoLayout = new javax.swing.GroupLayout(pnlFondo);
        pnlFondo.setLayout(pnlFondoLayout);
        pnlFondoLayout.setHorizontalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        pnlFondoLayout.setVerticalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmReloj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmReloj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmReloj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmReloj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmReloj().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgRadios;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JPanel pnlFondo;
    // End of variables declaration//GEN-END:variables
}
